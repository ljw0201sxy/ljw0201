index 有序的数据结构：高效获取数据
1.无索引时全表扫描效率低下，有索引时大概像二叉树式查找，效率高
优点：提高查询与排序效率
缺点：降低更新增删改表的效率 可以忽略
2.索引结构
b-tree 多路平衡查找  b+tree 也很好用 一般innodb储存引擎选择b+tree 
哈希索引：采用哈希算法，将键值换算成新的哈希值，映射到对应槽位，储存在哈希表中
（如果两个及以上键值，映射到同一个槽位，就产生哈希冲突，可通过链表解决）效率更高
=================
哈希只支持精确查询不支持范围 ，b可以
=====================================================================================
1.主键索引:primary
2.唯一索引:unique
3.常规索引:快速定位数据
4.全文索引:查找文本关键字 fulltext
5.聚集索引（如果存在主键那么他们是同种索引）:将数据存储与索引放在一起，必须有且只有一个
6.二级索引：数据与索引分开查询，可以多个
二级索引找到id-指向聚集索引拿到数据 称为回表查询