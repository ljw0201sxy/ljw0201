事务（进行实时的对应操作）
当同时进行一系列操作时，如果一个环节出错，可是前面环节都生效就会出现错误，所以应该进行事务操作来确保准确
1.查看/设置事务提交方式
select @@autocommit;显示为1代表当前为自动提交
set @@autocommit=0;
当设置了手动提交，执行sql语句时，并不会产生作用，只有提交事务commit；才会生效
2.提交事务
commit;
3.回滚事务
rollback;一旦执行出错就回滚
4.开启事务（手动控制的意思）
start begin或transaction；
————————————————————————————————————————————————————事务的四大特性
1.原子性：事务是不可分割的最小操作单元，要么全部成功，要么全部失败
2.一致性：事务完成时，必须所有数据都保持一致状态
3.隔离性：数据库提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行
4.持久性：事务一旦提交或者回滚，对数据库中数据的改变是永久的
————————————————————————————————————————————————————并发事务问题
比如同时打开两个命令行打开mysql同时进行操作，此称为并发事务
脏读：一个事务读到另一个事务还没有提交的数据
不可重复读：一个事务先后读取同一条记录，但两次读取数据不同
幻读：一个事务按照条件查询数据时，没有对应数据行，但在插入数据时，又发现已经存在，仿佛出现幻影
————————————————————————————————————————————————————事务隔离级别
  隔离级别                    脏读           不可重复读              幻读
read uncommitted              yes            yes                   yes
read committed                no             yes                   yes
repeatable read               no             no                    yes
serializable                  no             no                    no   
查看事务隔离级别
start @@transaction_islocation;
设置事务隔离级别
set [session|global] transaction islocation level {}